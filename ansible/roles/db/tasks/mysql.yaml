---
- name: install mysql
  package:
    name:
      - "mysql-server-{{ runtimes.mysql.version }}"
      - "mysql-client-{{ runtimes.mysql.version }}"
      - libmysqlclient-dev
    state: present
  tags: mysql

- name: Install MySQL-python for Ansible
  package:
    name:
      - python3-pymysql
      - python3-mysqldb
    state: present
  tags: mysql


- name: set mysql datadir
  set_fact:
    db_datadir: "{{ dirs.server.data | regex_replace('\\/$', '') }}/db"
    mysql_datadir: "{{ dirs.server.data | regex_replace('\\/$', '') }}/db/mysql"
  tags: mysql

- name: create db datadir
  file:
    path: "{{ db_datadir }}"
    state: directory
    mode: 0753
    owner: root
    group: root
  tags: mysql

- name: create mysql datadir
  file:
    path: "{{ mysql_datadir }}"
    state: directory
    mode: 0750
    owner: mysql
    group: mysql
  tags: mysql

- name: stop mysql
  ansible.builtin.service:
    name: mysql
    state: stopped
  tags: mysql

- name: update mysqld apparmor attrs
  lineinfile:
    path: /etc/apparmor.d/usr.sbin.mysqld
    line: |
      {{ mysql_datadir }}/ r,
      {{ mysql_datadir }}/** rwk,
    insertafter: "# Allow data dir access"
  tags: mysql

- name: restart apparmor
  ansible.builtin.service:
    name: apparmor
    state: restarted
  tags: mysql

- name: Change mysql datadir path
  community.general.ini_file:
     path: /etc/mysql/mysql.conf.d/mysqld.cnf
     section: mysqld
     option: datadir
     value: "{{ mysql_datadir }}/"
     backup: yes
     create: no
  tags: mysql

- name: init mysql datadir
  command:
    cmd: "mysqld --user=mysql --initialize-insecure --datadir={{ mysql_datadir }}"
    creates: "{{ mysql_datadir }}/auto.cnf"
  tags: mysql

- name: Enable Local file load for mysql - mysqld.conf
  community.general.ini_file:
     path: /etc/mysql/mysql.conf.d/mysqld.cnf
     section: mysqld
     option: local-infile
     value: 1
     create: no
  tags: mysql

- name: Enable Local file load for mysql - mysql.conf
  community.general.ini_file:
     path: /etc/mysql/mysql.conf.d/mysql.cnf
     section: mysql
     option: local-infile
     value: 1
     create: no
  tags: mysql

- name: enable mysql
  ansible.builtin.service:
    name: mysql
    state: restarted
    enabled: true
  tags: mysql

- name: Set root user password
  mysql_user:
    host: "{{ item }}"
    name: root
    password: "{{ db.mysql.root_password }}"
    check_implicit_admin: yes
    state: present
    login_user: root
    login_unix_socket: /var/run/mysqld/mysqld.sock
    # login_password="{{ mysql_old_root_password }}"
  with_items:
    - '::1'
    - '127.0.0.1'
    - 'localhost'
  ignore_errors: yes
  tags: mysql

- name: Removes all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ db.mysql.root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags: mysql

- name: test database is absent
  mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ db.mysql.root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  tags: mysql
